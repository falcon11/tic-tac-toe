{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Board","renderSquare","i","key","concat","_this","squares","renderSquares","rows","j","push","this","Component","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","_this$state","state","history","stepNumber","slice","calculateWinner","xIsNext","setState","length","lines","_lines$i","slicedToArray","b","c","jumpTo","index","renderMovesList","map","item","desc","Array","fill","status","_this$state2","current","winner","Board_Board","ReactDom","render","Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.017bf66f.chunk.js","sourcesContent":["import React from 'react';\n\n// export default class Square extends Component {\n//     render() {\n//         const { value } = this.props;\n//         return (\n//             <button\n//                 className={'square'}\n//                 onClick={this.props.onClick}\n//             >\n//                 {value}\n//             </button>\n//         )\n//     }\n// }\n\n\n// 性能优化： https://reactjs.org/docs/optimizing-performance.html#examples\n/**\n * In React, function components are a simpler way to write components that only contain a render method and don’t have their own state. Instead of defining a class which extends React.Component, we can write a function that takes props as input and returns what should be rendered. Function components are less tedious to write than classes, and many components can be expressed this way.\n*/\n\nexport default function Square(props) {\n    return (\n        <button\n            className='square'\n            onClick={props.onClick}\n        >\n            {props.value}\n        </button>\n    )\n}","import React, { Component } from 'react';\nimport Square from './Square';\n\nexport default class Board extends Component {\n\n    renderSquare = (i) => {\n        return (\n            <Square\n                key={`r${i}`}\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        )\n    }\n\n    renderSquares = () => {\n        let rows = [];\n        for (let i = 0; i < 3; i++) {\n            let squares = [];\n            for (let j = 0; j < 3; j++) {\n                squares.push(this.renderSquare(i * 3 + j));\n            }\n            rows.push((\n                <div key={`r-${i}`} className={'board-row'}>{squares}</div>\n            ))\n        }\n        return rows;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderSquares()}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Board from './Board';\n\nexport default class Game extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: true\n        }\n    }\n\n    handleClick = (i) => {\n        let { history, stepNumber } = this.state;\n        history = history.slice(0, stepNumber + 1);\n        const current = history[stepNumber];\n        const squares = current.squares.slice();\n        if (this.calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        })\n    }\n\n    calculateWinner = (squares) => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n                return squares[a]\n            }\n        }\n        return null;\n    }\n\n    jumpTo = (index) => {\n        this.setState({\n            stepNumber: index,\n            xIsNext: (index % 2) === 0,\n        })\n    }\n\n    renderMovesList = () => {\n        const { history } = this.state;\n        const moves = history.map((item, index) => {\n            const desc = index ?\n                ('Go to move #' + index) :\n                ('Go to start');\n            return (\n                <li key={`r${index}`}>\n                    <button onClick={() => this.jumpTo(index)}>{desc}</button>\n                </li>\n            )\n        })\n        return moves;\n    }\n\n    render() {\n        const { history, stepNumber } = this.state;\n        const current = history[stepNumber];\n        const winner = this.calculateWinner(current.squares);\n        let status;\n        if (winner) {\n            status = 'Winner ' + winner;\n        } else {\n            status = 'Next player is ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div className='game'>\n                <div className='game-board'>\n                    <Board\n                        squares={current.squares}\n                        onClick={this.handleClick}\n                    />\n                </div>\n                <div className='game-info'>\n                    <div>{status}</div>\n                    <ol>{this.renderMovesList()}</ol>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDom from \"react-dom\";\nimport './index.css';\nimport Game from './components/Game';\n\nReactDom.render(\n    <Game />,\n    document.getElementById('root')\n)"],"sourceRoot":""}